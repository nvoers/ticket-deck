// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id                String       @id
  firstName         String?
  lastName          String?
  username          String       @unique
  profileImageUrl   String?
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  userFriendships   Friendship[] @relation(name: "userFriendships")
  friendFriendships Friendship[] @relation(name: "friendFriendships")
}

model Ticket {
  id     String   @id @default(cuid())
  name   String
  code   String /// @encrypted
  date   DateTime
  userId String?
}

model Friendship {
  id String @id @default(cuid())

  userId String
  user   User?  @relation(name: "userFriendships", fields: [userId], references: [id])

  friendId String
  friend   User?  @relation(name: "friendFriendships", fields: [friendId], references: [id])

  status FriendshipStatus @default(REQUESTED)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@unique(fields: [userId, friendId], name: "unique_friendship")
  @@unique(fields: [friendId, userId], name: "unique_friendship_inverse")
}

enum FriendshipStatus {
  REQUESTED
  ACCEPTED
  DECLINED
}
